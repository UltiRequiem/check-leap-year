import test from 'ava';
import isLeapYear from './index.js';

test('Test with Numbers', t => {
	t.is(isLeapYear(2000), true);
	t.is(isLeapYear(1900), false);
	t.is(isLeapYear(2100), false);
	t.is(isLeapYear(2400), true);
	t.is(isLeapYear(2401), false);
	t.is(isLeapYear(2402), false);
	t.is(isLeapYear(2403), false);
	t.is(isLeapYear(2404), true);
	t.is(isLeapYear(2405), false);
	t.is(isLeapYear(2406), false);
	t.is(isLeapYear(2407), false);
	t.is(isLeapYear(2408), true);
	t.is(isLeapYear(2409), false);
	t.is(isLeapYear(2410), false);
	t.is(isLeapYear(2411), false);
	t.is(isLeapYear(2412), true);
	t.is(isLeapYear(2413), false);
	t.is(isLeapYear(2414), false);
	t.is(isLeapYear(2415), false);
	t.is(isLeapYear(2416), true);
	t.is(isLeapYear(2417), false);
	t.is(isLeapYear(2418), false);
	t.is(isLeapYear(2419), false);
	t.is(isLeapYear(2420), true);
	t.is(isLeapYear(2421), false);
	t.is(isLeapYear(2422), false);
	t.is(isLeapYear(2423), false);
	t.is(isLeapYear(2424), true);
	t.is(isLeapYear(2425), false);
	t.is(isLeapYear(2426), false);
	t.is(isLeapYear(2427), false);
});

test('Test with Strings', t => {
	t.is(isLeapYear('2000'), true);
	t.is(isLeapYear('1900'), false);
	t.is(isLeapYear('2100'), false);
	t.is(isLeapYear('2400'), true);
	t.is(isLeapYear('2401'), false);
	t.is(isLeapYear('2402'), false);
	t.is(isLeapYear('2403'), false);
	t.is(isLeapYear('2404'), true);
	t.is(isLeapYear('2405'), false);
	t.is(isLeapYear('2406'), false);
	t.is(isLeapYear('2407'), false);
	t.is(isLeapYear('2408'), true);
	t.is(isLeapYear('2409'), false);
	t.is(isLeapYear('2410'), false);
	t.is(isLeapYear('2411'), false);
	t.is(isLeapYear('2412'), true);
	t.is(isLeapYear('2413'), false);
	t.is(isLeapYear('2414'), false);
	t.is(isLeapYear('2415'), false);
	t.is(isLeapYear('2416'), true);
	t.is(isLeapYear('2417'), false);
	t.is(isLeapYear('2418'), false);
	t.is(isLeapYear('2419'), false);
	t.is(isLeapYear('2420'), true);
	t.is(isLeapYear('2421'), false);
	t.is(isLeapYear('2422'), false);
	t.is(isLeapYear('2423'), false);
	t.is(isLeapYear('2424'), true);
	t.is(isLeapYear('2425'), false);
	t.is(isLeapYear('2426'), false);
	t.is(isLeapYear('2427'), false);
});

test('Test with Dates', t => {
	t.is(isLeapYear(new Date('2000')), true);
	t.is(isLeapYear(new Date('1900')), false);
	t.is(isLeapYear(new Date('2100')), false);
	t.is(isLeapYear(new Date('2400')), true);
	t.is(isLeapYear(new Date('2401')), false);
	t.is(isLeapYear(new Date('2402')), false);
	t.is(isLeapYear(new Date('2403')), false);
	t.is(isLeapYear(new Date('2404')), true);
	t.is(isLeapYear(new Date('2405')), false);
	t.is(isLeapYear(new Date('2406')), false);
	t.is(isLeapYear(new Date('2407')), false);
	t.is(isLeapYear(new Date('2408')), true);
	t.is(isLeapYear(new Date('2409')), false);
	t.is(isLeapYear(new Date('2410')), false);
	t.is(isLeapYear(new Date('2411')), false);
	t.is(isLeapYear(new Date('2412')), true);
	t.is(isLeapYear(new Date('2413')), false);
	t.is(isLeapYear(new Date('2414')), false);
	t.is(isLeapYear(new Date('2415')), false);
	t.is(isLeapYear(new Date('2416')), true);
	t.is(isLeapYear(new Date('2417')), false);
	t.is(isLeapYear(new Date('2418')), false);
	t.is(isLeapYear(new Date('2419')), false);
	t.is(isLeapYear(new Date('2420')), true);
	t.is(isLeapYear(new Date('2421')), false);
	t.is(isLeapYear(new Date('2422')), false);
	t.is(isLeapYear(new Date('2423')), false);
	t.is(isLeapYear(new Date('2424')), true);
	t.is(isLeapYear(new Date('2425')), false);
	t.is(isLeapYear(new Date('2426')), false);
	t.is(isLeapYear(new Date('2427')), false);
});
